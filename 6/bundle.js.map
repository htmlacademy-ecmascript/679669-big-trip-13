{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/nanoid/index.browser.js","webpack:///./node_modules/nanoid/url-alphabet/index.js","webpack:///./src/const.js","webpack:///./src/main.js","webpack:///./src/mock/generate-trip-events.js","webpack:///./src/mock/mock-utils.js","webpack:///./src/mock/trip-events-mocks.js","webpack:///./src/utils.js","webpack:///./src/view/get-days-and-dates.js","webpack:///./src/view/header-filters.js","webpack:///./src/view/header-nav-menu.js","webpack:///./src/view/header-trip-cost.js","webpack:///./src/view/render-event-form.js","webpack:///./src/view/render-trip-event.js","webpack:///./src/view/trip-event-time.js","webpack:///./src/view/trip-events-container.js","webpack:///./src/view/trip-info-container.js","webpack:///./src/view/trip-info-route.js","webpack:///./src/view/trip-sorting.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEqD;;AAErD,IAAI,IAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEoE;;;;;;;;;;;;;ACxGpE;AAAA;AAAA;AACA;AACA;AACA;;AAEsB;;;;;;;;;;;;;ACLtB;AAAA;AAAA;AAAA;AAAO;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACF;AACF;AACD;AACJ;AACiB;AACJ;AACR;AACI;AACN;AACf;;AAEtC;AACA,eAAe,iFAAc;;AAE7B;;AAEO;AACP,wBAAwB,+DAAa;AACrC;AACA,uBAAuB,+DAAmB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,6DAAa;AACf;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA,6DAAa,sBAAsB,iEAAqB;AACxD;;AAEA,6DAAa,wBAAwB,6DAAiB;AACtD,6DAAa,wBAAwB,8DAAkB;;;AAGvD,6DAAa,qCAAqC,6DAAiB;AACnE,6DAAa,sCAAsC,4DAAiB;;AAEpE;;AAEA,6DAAa,wBAAwB,0DAAe;;AAEpD;;AAEA,6DAAa,sBAAsB,mEAAuB;;AAE1D;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AAQtC;AACyE;AAC3C;AACtB;;AAEvB;AACP,gBAAgB,+DAAgB,CAAC,6DAAU;AAC3C,8BAA8B,sEAAkB;AAChD,mBAAmB,8DAAU;AAC7B,iBAAiB,uEAAmB;AACpC;AACA,oBAAoB,yEAAW;;AAE/B;AACA;AACA,sBAAsB,+DAAgB,CAAC,oEAAiB;AACxD,8BAA8B,mEAAe,CAAC,yDAAM;AACpD,4BAA4B,6EAAyB;AACrD;AACA;AACA,qBAAqB,6DAAS;AAC9B;AACA;AACA,YAAY,sEAAmB;AAC/B,wBAAwB,+DAAgB;AACxC,WAAW,+DAAgB;AAC3B,QAAQ,qDAAM;AACd;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACP;;AAE9C;AACP,gBAAgB,+DAAgB;AAChC;;AAEA,iBAAiB,YAAY;;AAE7B,mBAAmB,mEAAgB;AACnC;;AAEA;AACA;;AAEO;AACP;;AAEA,+CAA+C,+DAAgB;AAC/D;;AAEA,mBAAmB,+DAAgB;AACnC;;AAEO;AACP,eAAe,+DAAgB;AAC/B,gBAAgB,+DAAgB;AAChC,cAAc,+DAAgB;AAC9B,eAAe,+DAAgB;AAC/B,kBAAkB,+DAAgB;;AAElC;AACA;;AAEO;AACP,0CAA0C,+DAAgB;AAC1D;;AAEO;AACP,uBAAuB,+DAAgB;AACvC;;AAEA,iBAAiB,kBAAkB;AACnC,kBAAkB,+DAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;;AAEO;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;;AAEA;AACA;;AAEO;;AAEP;AACA;;AAEO,qCAAqC;AAC5C;;AAEA;;AAEA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAO;AACP;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export const MONTHS = [`Jan`, `Feb`, `Mar`, `Apr`, `May`, `Jun`, `Jul`, `Aug`, `Sep`, `Oct`, `Nov`, `Dec`];\n\nexport const MONTH_DAYS = {\n  '0': 31,\n  '1': 28,\n  '2': 31,\n  '3': 30,\n  '4': 31,\n  '5': 30,\n  '6': 31,\n  '7': 31,\n  '8': 30,\n  '9': 31,\n  '10': 30,\n  '11': 31\n};\n\nexport const TIME_TO_MS = {\n  MINUTE: 60000,\n  HOUR: 360000,\n  DAY: 86400000,\n};\n","import {generateEvents} from \"./mock/generate-trip-events\";\nimport HeaderTripCostView from \"./view/header-trip-cost\";\nimport HeaderNavMenuView from \"./view/header-nav-menu\";\nimport HeaderFiltersView from \"./view/header-filters\";\nimport TripSortingView from \"./view/trip-sorting\";\nimport TripEventsContainerView from \"./view/trip-events-container\";\nimport TripInfoContainerView from \"./view/trip-info-container\";\nimport TripInfoRouteView from \"./view/trip-info-route\";\nimport RenderEventFormView from \"./view/render-event-form\";\nimport TripEventView from \"./view/render-trip-event\";\nimport {renderElement} from \"./utils\";\n\nconst RENDER_EVENTS_COUNT = 4;\nconst events = generateEvents(RENDER_EVENTS_COUNT);\n\n// Обработчики события смены формы на список и наоборот\n\nexport const addEventToList = (eventListElement, event) => {\n  const tripEvent = new TripEventView(event);\n  const eventSwitchButton = tripEvent.getElement().querySelector(`.event__rollup-btn`);\n  const tripForm = new RenderEventFormView(event, event.id);\n  const eventEditForm = tripForm.getElement();\n\n  const eventSwitchButtonHandler = () => {\n    eventListElement.replaceChild(tripForm.getElement(), tripEvent.getElement());\n  };\n\n  const formSwitchSubmitHandler = (evt) => {\n    evt.preventDefault();\n    eventListElement.replaceChild(tripEvent.getElement(), tripForm.getElement());\n  };\n\n  eventSwitchButton.addEventListener(`click`, eventSwitchButtonHandler);\n  eventEditForm.addEventListener(`submit`, formSwitchSubmitHandler);\n\n  renderElement(eventListElement, tripEvent.getElement());\n};\n\n// шапка\n\nconst tripMainElement = document.querySelector(`.trip-main`);\nconst tripEventsElement = document.querySelector(`.trip-events`);\n\n\nconst tripControlsElement = tripMainElement.querySelector(`.trip-controls`);\nconst [tripControlsFirstHeaderElement, tripControlsSecondHeaderElement] = tripControlsElement.querySelectorAll(`h2`);\n\nrenderElement(tripMainElement, new TripInfoContainerView().getElement(), `prepend`);\nconst tripInfoContainer = tripMainElement.querySelector(`.trip-info`);\n\nrenderElement(tripInfoContainer, new TripInfoRouteView(events).getElement());\nrenderElement(tripInfoContainer, new HeaderTripCostView(events).getElement());\n\n\nrenderElement(tripControlsFirstHeaderElement, new HeaderNavMenuView().getElement(), `insertAfter`);\nrenderElement(tripControlsSecondHeaderElement, new HeaderFiltersView().getElement(), `insertAfter`);\n\n// сортировка\n\nrenderElement(tripEventsElement, new TripSortingView().getElement());\n\nconst tripSortElement = tripEventsElement.querySelector(`.trip-sort`);\n\nrenderElement(tripSortElement, new TripEventsContainerView().getElement(), `insertAfter`);\n\nconst eventsListElement = tripEventsElement.querySelector(`.trip-events__list`);\n\n// форма\n// renderElement(eventsListElement, new RenderEventFormView(events[getRandomInteger(0, events.length)], events.counter).getElement(),`insertBefore`);\n\n// Создание моков\n\nevents.forEach((event) => {\n  addEventToList(eventsListElement, event);\n// renderElement(eventsListElement, new TripEventView(event).getElement());\n});\n","import {getRandomItemArr, getRandomInteger} from \"../utils\";\nimport {\n  getRandomStartDate,\n  getEndDate,\n  getRandomOffers,\n  generateRandomDescription,\n  generateRandomPhoto,\n  parseDate,\n} from \"./mock-utils\";\nimport {eventDestinations, eventTypeActionsMap, eventTypes, offers} from \"./trip-events-mocks\";\nimport {getTimeDiff} from \"../view/trip-event-time\";\nimport {nanoid} from \"nanoid\";\n\nexport const getTripEventData = () => {\n  const EVENT = getRandomItemArr(eventTypes);\n  const START_DATE = new Date(getRandomStartDate());\n  const END_DATE = getEndDate(START_DATE);\n  const PHOTOS = generateRandomPhoto();\n  const HAS_OFFERS = Math.random() > 0.5;\n  const DATE_DIFF = getTimeDiff(START_DATE, END_DATE);\n\n  return {\n    eventType: EVENT,\n    eventDestination: getRandomItemArr(eventDestinations),\n    eventOffers: HAS_OFFERS ? getRandomOffers(offers) : null,\n    destinationDescription: generateRandomDescription(),\n    destinationPhoto: PHOTOS,\n    startTime: START_DATE,\n    parsedStartDate: parseDate(START_DATE),\n    endTime: END_DATE,\n    timeDiff: DATE_DIFF,\n    action: eventTypeActionsMap[EVENT],\n    isFavorite: Boolean(getRandomInteger(0, 1)),\n    price: getRandomInteger(10, 1000),\n    id: nanoid(),\n  };\n};\n\nexport const generateEvents = (count) => {\n  return new Array(count).fill(``).map(getTripEventData);\n};\n","import {getRandomItemArr, getRandomInteger} from \"../utils\";\nimport {infoDescriptions} from \"./trip-events-mocks\";\n\nexport const generateRandomDescription = () => {\n  const count = getRandomInteger(1, 5);\n  let description = ``;\n\n  for (let i = 0; i <= count; i++) {\n\n    description += infoDescriptions[i];\n  }\n\n  return description;\n};\n\nexport const generateRandomPhoto = () => {\n  const generatePhoto = () => {\n\n    return `http://picsum.photos/248/152?r=` + getRandomInteger(0, 999);\n  };\n\n  return new Array(getRandomInteger(1, 4)).fill(``).map(generatePhoto);\n};\n\nexport const getRandomStartDate = () => {\n  const YEAR = getRandomInteger(2020, 2022);\n  const MONTH = getRandomInteger(1, 12);\n  const DAY = getRandomInteger(1, 31);\n  const HOUR = getRandomInteger(0, 23);\n  const MINUTES = getRandomInteger(0, 59);\n\n  return new Date(YEAR, MONTH, DAY, HOUR, MINUTES);\n};\n\nexport const getEndDate = (startDate) => {\n  return new Date(Date.parse(startDate) + getRandomInteger(1, 3) * 3600000);\n};\n\nexport const getRandomOffers = (offers) => {\n  const OFFERS_COUNT = getRandomInteger(1, 5);\n  const RANDOM_OFFERS = [];\n\n  for (let i = 0; i < OFFERS_COUNT; i++) {\n    const offer = getRandomItemArr(offers);\n    if (RANDOM_OFFERS.indexOf(offer) === -1) {\n      RANDOM_OFFERS.push(offer);\n    }\n  }\n\n  return RANDOM_OFFERS;\n};\n\nexport const parseDate = (date) => {\n  const RECIEVED_DATE = date.getDate();\n  const RECIEVED_MONTH = date.getMonth();\n  const RECIEVED_YEAR = date.getFullYear();\n\n  return Date.parse((new Date(RECIEVED_YEAR, RECIEVED_MONTH, RECIEVED_DATE)).toString());\n};\n","export const eventTypes = [`Taxi`, `Bus`, `Train`, `Ship`, `Transport`,\n  `Drive`, `Flight`, `Check-in`, `Sightseeing`, `Restaurant`];\n\nexport const eventDestinations = [`Amsterdam`, `Minsk`, `Geneva`, `Vladivostok`, `New York`, `London`, `Paris`, `Bruxelles`];\n\nexport const infoDescriptions = [\n  `Lorem ipsum dolor sit amet, consectetur adipiscing elit.`,\n  `Cras aliquet varius magna, non porta ligula feugiat eget.`,\n  `Fusce tristique felis at fermentum pharetra.`,\n  `Aliquam id orci ut lectus varius viverra.`,\n  `Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.`,\n  `Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.`,\n  `Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.`,\n  `Sed sed nisi sed augue convallis suscipit in sed felis.`,\n  `Aliquam erat volutpat.`,\n  `Nunc fermentum tortor ac porta dapibus.`,\n  `In rutrum ac purus sit amet tempus.`\n];\n\nexport const eventTypeActionsMap = {\n  'Taxi': `to`,\n  'Bus': `to`,\n  'Train': `to`,\n  'Ship': `to`,\n  'Transport': `to`,\n  'Drive': `to`,\n  'Flight': `to`,\n  'Check-in': `in`,\n  'Sightseeing': `in`,\n  'Restaurant': `in`,\n};\n\nexport const offers = [\n  {\n    id: `luggage`,\n    title: `Add luggage`,\n    price: 38,\n  },\n  {\n    id: `comfort`,\n    title: `Switch to comfort class`,\n    price: 100,\n  },\n  {\n    id: `meal`,\n    title: `Add meal`,\n    price: 15,\n  },\n  {\n    id: `seats`,\n    title: `Choose seats`,\n    price: 5,\n  },\n  {\n    id: `train`,\n    title: `Travel by train`,\n    price: 40,\n  },\n  {\n    id: `taxi`,\n    title: `Order a taxi`,\n    price: 25,\n  },\n  {\n    id: `breakfast`,\n    title: `Add breakfast`,\n    price: 11,\n  },\n  {\n    id: `carrent`,\n    title: `Rent a car`,\n    price: 60,\n  },\n  {\n    id: `wi-fi`,\n    title: `Access to Wi-Fi`,\n    price: 3,\n  },\n];\n","export const getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nexport const getRandomItemArr = (arr) => {\n\n  return arr[getRandomInteger(0, arr.length - 1)];\n};\n\nexport const createElement = (template) => { // позволяет получить элемент для вставки в дом-дерево\n  const newElement = document.createElement(`div`);\n\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n\nexport const renderElement = (container, element, position = `append`) => {\n  const parentContainer = typeof container === `string` ? document.querySelector(container) : container;\n\n  switch (position) {\n    case `append`:\n      parentContainer.append(element);\n      break;\n    case `prepend`:\n      parentContainer.prepend(element);\n      break;\n    case `insertBefore`:\n      parentContainer.parentNode.insertBefore(element, parentContainer);\n      break;\n    case `insertAfter`:\n      parentContainer.parentNode.insertBefore(element, parentContainer.nextSibling);\n      break;\n  }\n};\n\nexport const renderTemplate = (container, template) => {\n  container.append(template);\n};\n\nexport const sortTripEvents = (events) => {\n  return events.slice().sort((a, b) => a.start - b.start);\n};\n","export const getEventsDates = (events) => {\n  return events.map((event) => {\n    return new Date(event.startTime.getFullYear(), event.startTime.getMonth(), event.startTime.getDate());\n  });\n};\n","import {createElement} from \"../utils\";\n\nconst renderFilter = () => {\n  return (`<form class=\"trip-filters\" action=\"#\" method=\"get\">\n            <div class=\"trip-filters__filter\">\n              <input id=\"filter-everything\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"everything\" checked>\n              <label class=\"trip-filters__filter-label\" for=\"filter-everything\">Everything</label>\n            </div>\n            <div class=\"trip-filters__filter\">\n              <input id=\"filter-future\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"future\">\n              <label class=\"trip-filters__filter-label\" for=\"filter-future\">Future</label>\n            </div>\n            <div class=\"trip-filters__filter\">\n              <input id=\"filter-past\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"past\">\n              <label class=\"trip-filters__filter-label\" for=\"filter-past\">Past</label>\n            </div>\n            <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n          </form>`).trim();\n};\n\nexport default class HeaderFilters {\n  constructor() {\n    this._element = null;\n  }\n  getTemplate() {\n    return renderFilter();\n  }\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n    return this._element;\n  }\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils\";\n\nconst createNavMenuTemplate = () => {\n  return (`<nav class=\"trip-controls__trip-tabs  trip-tabs\">\n              <a class=\"trip-tabs__btn  trip-tabs__btn--active\" href=\"#\">Table</a>\n              <a class=\"trip-tabs__btn\" href=\"#\">Stats</a>\n            </nav>`).trim();\n};\n\nexport default class HeaderNavMenu {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createNavMenuTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils\";\n\nconst renderTripCostTemplate = (tripEvents) => {\n  const countOffersCost = (offers) => {\n    return offers === null ? 0 : offers.reduce((total, cost) => total + cost.price, 0);\n  };\n\n  const getEventsCost = (events) => {\n    return events.reduce((total, cost) => total + cost.price + countOffersCost(cost.eventOffers), 0);\n  };\n\n  return (`<p class=\"trip-info__cost\">Total: &euro;&nbsp;<span class=\"trip-info__cost-value\">${getEventsCost(tripEvents)}</span></p>`).trim();\n};\n\nexport default class HeaderTripCost {\n  constructor(tripEvents) {\n    this._element = null;\n    this._tripEvents = tripEvents;\n  }\n\n  getTemplate() {\n    return renderTripCostTemplate(this._tripEvents);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {eventTypes, eventDestinations} from \"../mock/trip-events-mocks\";\nimport {getEventTimeFormat} from \"./trip-event-time\";\nimport {createElement} from \"../utils\";\n\nconst renderEventOffers = (offers) => {\n  return offers.map((offer, index) => {\n    const {id, title, price} = offer;\n    const isChecked = Math.random() > 0.5;\n    return (\n      `<div class=\"event__offer-selector\">\n          <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-${id}-${index + 1}\"\n              type=\"checkbox\" name=\"event-offer-${id}\" ${isChecked ? `checked` : ``}>\n          <label class=\"event__offer-label\" for=\"event-offer-${id}-${index + 1}\">\n          <span class=\"event__offer-title\">${title}</span>\n              &plus;\n              &euro;&nbsp;<span class=\"event__offer-price\">${price}</span>\n          </label>\n      </div>`\n    );\n  })\n    .join(``);\n};\n\nconst renderOffers = (offers) => {\n  const eventOffers = renderEventOffers(offers);\n  return `<section class=\"event__section  event__section--offers\">\n              <h3 class=\"event__section-title  event__section-title--offers\">Offers</h3>\n              <div class=\"event__available-offers\">\n                  ${eventOffers}\n              </div>\n          </section>`;\n};\n\nconst renderOptions = (destinations) => {\n  return destinations.map((destination) => {\n    return `<option value=\"${destination}\"></option>`;\n  }).join(`\\n`);\n};\n\nconst renderTypesList = (types) => {\n  return types.map((type, id) => {\n    return `<div class=\"event__type-item\">\n              <input id=\"event-type-${type.toLowerCase()}-${id + 1}\" class=\"event__type-input  visually-hidden\"\n                   type=\"radio\" name=\"event-type\" value=\"${type}\">\n              <label class=\"event__type-label  event__type-label--${type.toLowerCase()}\"\n                  for=\"event-type-${type.toLowerCase()}-${id + 1}\">${type}</label>\n              </div>`;\n  }).join(`\\n`);\n};\n\nconst renderPhotos = (photos) => {\n  return photos.map((photo) => {\n    return `<img class=\"event__photo\" src=\"${photo}\" alt=\"Event photo\">`;\n  }).join(`\\n`);\n};\n\nconst createEventForm = (events, id) => {\n  const {eventType, eventDestination, destinationDescription, destinationPhoto, eventOffers, price, action, startTime} = events;\n\n  const eventTypesList = renderTypesList(eventTypes.slice(0, 7));\n  const activitiesTypesList = renderTypesList(eventTypes.slice(7, 10));\n  const eventOptions = renderOptions(eventDestinations);\n  const eventPhotos = renderPhotos(destinationPhoto);\n  const startDate = getEventTimeFormat(startTime);\n  const offers = eventOffers !== null ? renderOffers(eventOffers) : ``;\n\n  return `<form class=\"trip-events__item  event  event--edit\" action=\"#\" method=\"post\">\n  <header class=\"event__header\">\n    <div class=\"event__type-wrapper\">\n      <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-${id}\">\n        <span class=\"visually-hidden\">Choose event type</span>\n        <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/${eventType.toLowerCase()}.png\" alt=\"Event ${eventType.toLowerCase()} icon\">\n      </label>\n      <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-${id}\" type=\"checkbox\">\n      <div class=\"event__type-list\">\n        <fieldset class=\"event__type-group\">\n          <legend class=\"visually-hidden\">Transfer</legend>\n          <div class=\"event__type-item\">\n            ${eventTypesList}\n          </div>\n        </fieldset>\n        <fieldset class=\"event__type-group\">\n          <legend class=\"visually-hidden\">Activity</legend>\n          <div class=\"event__type-item\">\n            ${activitiesTypesList}\n          </div>\n        </fieldset>\n      </div>\n    </div>\n    <div class=\"event__field-group  event__field-group--destination\">\n      <label class=\"event__label  event__type-output\" for=\"event-destination-${id}\">\n        ${eventType} ${action}\n      </label>\n\n<input class=\"event__input  event__input--destination\" id=\"event-destination-${id}\" type=\"text\" name=\"event-destination\" value=\"${eventDestination}\" list=\"destination-list-1\">\n      <datalist id=\"destination-list-${id}\">\n        ${eventOptions}\n      </datalist>\n    </div>\n    <div class=\"event__field-group  event__field-group--time\">\n      <label class=\"visually-hidden\" for=\"event-start-time-${id}\">\n        From\n      </label>\n      <input class=\"event__input  event__input--time\" id=\"event-start-time-${id}\" type=\"text\" name=\"event-start-time\" value=\"${startDate}\">\n      &mdash;\n      <label class=\"visually-hidden\" for=\"event-end-time-${id}\">\n        To\n      </label>\n      <input class=\"event__input  event__input--time\" id=\"event-end-time-${id}\" type=\"text\" name=\"event-end-time\" value=\"18/03/19 00:00\">\n    </div>\n    <div class=\"event__field-group  event__field-group--price\">\n      <label class=\"event__label\" for=\"event-price-${id}\">\n        <span class=\"visually-hidden\">Price</span>\n        &euro;\n      </label>\n      <input class=\"event__input  event__input--price\" id=\"event-price-${id}\" type=\"text\" name=\"event-price\" value=\"${price}\">\n    </div>\n    <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n    <button class=\"event__reset-btn\" type=\"reset\">Cancel</button>\n  </header>\n  <section class=\"event__details\">\n    ${offers}\n  <p class=\"event__destination-description\">${destinationDescription}</p>\n        <div class=\"event__photos-container\">\n          <div class=\"event__photos-tape\">\n            ${eventPhotos}\n          </div>\n        </div>\n      </section>\n  </section>\n</form>`;\n};\n\nexport default class RenderEventForm {\n  constructor(events, id) {\n    this._events = events;\n    this._id = id;\n  }\n\n  getTemplate() {\n    return createEventForm(this._events, this._id);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils\";\nimport {getEventTimeFormat} from \"./trip-event-time\";\nimport {MONTHS} from \"../const\";\n\nconst renderEventOffers = (offers) => {\n  return offers.map((offer, index) => {\n    const {id, title, price} = offer;\n    const isChecked = Math.random() > 0.5;\n    return (\n      `<div class=\"event__offer-selector\">\n<input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-${id}-${index + 1}\" type=\"checkbox\" name=\"event-offer-${id} ${isChecked ? `checked` : ``}\">\n<label class=\"event__offer-label\" for=\"event-offer-${id}-${index + 1}\">\n<span class=\"event__offer-title\">${title}</span>&plus;&euro;&nbsp;<span class=\"event__offer-price\">${price}</span></div>`);\n  })\n    .join(`\\n`);\n};\n\nexport const renderOffers = (offers) => {\n  const eventOffers = renderEventOffers(offers);\n\n  return (`<section class=\"event__section event__section--offers\">\n<div class=\"event__available-offers\">${eventOffers}</div>\n</section>`);\n};\n\nconst renderTripEventTemplate = (event) => {\n  const {eventType, eventDestination, eventOffers, price, action, startTime, endTime, timeDiff} = event;\n\n  const tripEventOffers = eventOffers !== null ? renderOffers(eventOffers) : ``;\n  const start = getEventTimeFormat(startTime);\n  const end = getEventTimeFormat(endTime);\n\n  return `<li class=\"trip-events__item\">\n              <div class=\"event\">\n                <time class=\"event__date\" datetime=\"${startTime.toISOString()}\">${MONTHS[startTime.getMonth() - 1]} ${startTime.getDate()}</time>\n                <div class=\"event__type\">\n                  <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"img/icons/${eventType}.png\" alt=\"Event ${eventType} icon\">\n                </div>\n                <h3 class=\"event__title\">${eventType} ${action} ${eventDestination}</h3>\n                <div class=\"event__schedule\">\n                  <p class=\"event__time\">\n                    <time class=\"event__start-time\" datetime=\"${startTime.toISOString()}\">${start}</time>\n                    &mdash;\n                    <time class=\"event__end-time\" datetime=\"${endTime.toISOString()}\">${end}</time>\n                  </p>\n                  <p class=\"event__duration\">${timeDiff}</p>\n                </div>\n                <p class=\"event__price\">\n                  &euro;&nbsp;<span class=\"event__price-value\">${price}</span>\n                </p>\n                <h4 class=\"visually-hidden\">Offers:</h4>\n                <ul class=\"event__selected-offers\">\n                  ${tripEventOffers}\n                </ul>\n                <button class=\"event__favorite-btn\" type=\"button\">\n                  <span class=\"visually-hidden\">Add to favorite</span>\n                  <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n                    <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"/>\n                  </svg>\n                </button>\n                <button class=\"event__rollup-btn\" type=\"button\">\n                  <span class=\"visually-hidden\">Open event</span>\n                </button>\n              </div>\n            </li>`;\n};\n\nexport default class RenderTripEvent {\n  constructor(event) {\n    this._element = null;\n    this._event = event;\n  }\n\n  getTemplate() {\n    return renderTripEventTemplate(this._event);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {TIME_TO_MS} from \"../const\";\n\nexport const getTimeDiff = (start, end) => {\n  const diffInMs = end - start;\n\n  const days = Math.trunc(diffInMs / TIME_TO_MS.DAY);\n  const daysString = days > 0 ? days + `D ` : ``;\n\n  const hours = Math.trunc(diffInMs % TIME_TO_MS.DAY / TIME_TO_MS.HOUR);\n  const hoursString = hours > 0 ? hours + `H ` : ``;\n\n  const minutes = Math.trunc(diffInMs % TIME_TO_MS.DAY % TIME_TO_MS.HOUR / TIME_TO_MS.MINUTE);\n  const minutesString = minutes > 0 ? minutes + `M` : ``;\n\n  return daysString + hoursString + minutesString;\n};\n\nexport const getEventTimeFormat = (time) => {\n  const timeValueArr = Array.of(time.getHours(), time.getMinutes()).map((value) => {\n    return value < 10 ? `0` + value : value;\n  });\n\n  return timeValueArr.join(`:`);\n};\n","import {createElement} from \"../utils\";\n\nconst createTripEventsContainer = () => {\n  return (`<ul class=\"trip-events__list\"></ul>`).trim();\n};\n\nexport default class TripEventsContainer {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createTripEventsContainer();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils\";\n\nconst createTripInfoContainerTemplate = () => {\n  return (`<section class=\"trip-main__trip-info  trip-info\"></section>`).trim();\n};\n\nexport default class TripInfoContainer {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createTripInfoContainerTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {MONTHS} from \"../const\";\nimport {sortTripEvents} from \"../utils\";\nimport {createElement} from \"../utils\";\nimport {getEventsDates} from \"./get-days-and-dates\";\n\nconst MAXIMUM_CITIES_SHOWN = 3;\n\nconst getTripRoute = (tripEvents) => {\n  const tripEventsSortedByDate = sortTripEvents(tripEvents);\n  const tripEventsCities = tripEventsSortedByDate.map((tripEvent) => tripEvent.eventDestination);\n  return tripEventsCities.length <= MAXIMUM_CITIES_SHOWN ? tripEventsCities.join(` - `) : tripEventsCities.slice(0, 1) + `— … —` + tripEventsCities.slice(tripEventsCities.length - 1);\n};\n\nconst getTripDates = (startDate, endDate) => {\n  const startMonth = startDate.getMonth();\n  const startDay = startDate.getDate();\n  const endMonth = endDate.getMonth();\n  const endDay = endDate.getDate();\n  const sameMonthString = `${MONTHS[startMonth]} ${startDay} &nbsp;&mdash;&nbsp; ${endDay}`;\n  const differentMonthString = `${MONTHS[startMonth]} ${startDay} &nbsp;&mdash;&nbsp; ${MONTHS[endMonth]} ${endDay}`;\n  return startMonth === endMonth ? sameMonthString : differentMonthString;\n};\n\nconst renderTripRoute = (eventsList) => {\n  const title = getTripRoute(eventsList);\n  const tripDates = getEventsDates(eventsList).sort((a, b) => a - b);\n  const tripDatesString = getTripDates(tripDates[0], tripDates[tripDates.length - 1]);\n  return (`<div class=\"trip-info__main\">\n            <h1 class=\"trip-info__title\">${title}</h1>\n            <p class=\"trip-info__dates\">${tripDatesString}</p>\n          </div>`).trim();\n};\n\nexport default class TripInfoRoute {\n  constructor(eventsList) {\n    this._element = null;\n    this._eventsList = eventsList;\n  }\n\n  getTemplate() {\n    return renderTripRoute(this._eventsList);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils\";\n\nconst createTripSortingTemplate = () => {\n  return (`<form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n            <div class=\"trip-sort__item  trip-sort__item--day\">\n              <input id=\"sort-day\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-day\">\n              <label class=\"trip-sort__btn\" for=\"sort-day\">Day</label>\n            </div>\n\n            <div class=\"trip-sort__item  trip-sort__item--event\">\n              <input id=\"sort-event\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-event\" disabled>\n              <label class=\"trip-sort__btn\" for=\"sort-event\">Event</label>\n            </div>\n\n            <div class=\"trip-sort__item  trip-sort__item--time\">\n              <input id=\"sort-time\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-time\">\n              <label class=\"trip-sort__btn\" for=\"sort-time\">Time</label>\n            </div>\n\n            <div class=\"trip-sort__item  trip-sort__item--price\">\n              <input id=\"sort-price\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-price\" checked>\n              <label class=\"trip-sort__btn\" for=\"sort-price\">Price</label>\n            </div>\n\n            <div class=\"trip-sort__item  trip-sort__item--offer\">\n              <input id=\"sort-offer\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-offer\" disabled>\n              <label class=\"trip-sort__btn\" for=\"sort-offer\">Offers</label>\n            </div>\n          </form>`).trim();\n};\n\nexport default class TripSorting {\n  constructor() {\n    this._element = null; // готовим элемент для вставки\n  }\n\n  getTemplate() {\n    return createTripSortingTemplate(); // получаем шаблон\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate()); // получаем элемент\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n"],"sourceRoot":""}